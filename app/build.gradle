apply plugin: 'com.android.application'

    android {
        compileSdkVersion = 27

        //To see what is the latest: http://developer.android.com/tools/revisions/build-tools.html
        buildToolsVersion = "27.0.3" //"22.0.1"

        defaultConfig.with {
            applicationId = "com.philolog.hc"
            minSdkVersion 16
            targetSdkVersion 27
            ndk {
                abiFilters "armeabi-v7a", "x86", "armeabi", "mips", "arm64-v8a", "x86_64", "mips64"
            }
            externalNativeBuild {
                cmake {
                    // cppFlags are configured according to your selection
                    // of "Customize C++ Support", in this codelab's
                    //    "Create a Sample App with the C++ Template",
                    //    step 6
                    cFlags "-std=c99 -O3"
                }
            }
            flavorDimensions "abi"
            productFlavors {
                all {
                    flavorDimension "abi"
                }
            }
        }

    /*
     * native build settings

    android.ndk {
        moduleName = "libGreek"
        CFlags.add("-O3")
        CFlags.add("-std=c99")
        ldLibs.add("log")

         * Other ndk flags configurable here are
         * cppFlags += "-fno-rtti"
         * cppFlags += "-fno-exceptions"
         * ldLibs    = ["android", "log"]
         * stl       = "system"
         */

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
        debug {
            debuggable = true
        }
    }

/*
    android.productFlavors {
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
        create("arm") {
            ndk.abiFilters.add("armeabi")
        }
        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
        create("arm8") {
            ndk.abiFilters.add("arm64-v8a")
        }
        create("x86") {
            ndk.abiFilters.add("x86")
        }
        create("x86-64") {
            ndk.abiFilters.add("x86_64")
        }
        create("mips") {
            ndk.abiFilters.add("mips")
        }
        create("mips-64") {
            ndk.abiFilters.add("mips64")
        }
        // To include all cpu architectures, leaves abiFilters empty
        create("all")
    }
*/

dependencies {
    compile 'com.android.support:support-v4:27.0.2'
}

// Specifies the location of the top level CMakeLists.txt
// The path is relative to the hosting directory
// of this build.gradle file
externalNativeBuild {
    cmake {
        path "CMakeLists.txt"
    }
}
}